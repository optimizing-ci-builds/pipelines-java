# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"

on: [push]
    # The branches below must be a subset of the branches above

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'java' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
    - uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas
        pip install numpy
        pip install inotify
    - run: sudo apt update
    - run: touch starting_analyze_Checkoutrepository_40
    - run: rm starting_analyze_Checkoutrepository_40
    - name: Checkout repository
      uses: actions/checkout@v3
    - run: python .github/workflows/inotify_script.py /home/runner/work/pipelines-java/pipelines-java /home/runner/inotify-logs.csv & echo 'optimizing-ci-builds'
    # Initializes the CodeQL tools for scanning.
    - run: touch starting_analyze_InitializeCodeQL_44
    - run: rm starting_analyze_InitializeCodeQL_44
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.
        
        # Details on CodeQL's query packs refer to : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        # queries: security-extended,security-and-quality

        
    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
    # If this step fails, then you should remove it and run the build manually (see below)
    - run: touch starting_analyze_Autobuild_58
    - run: rm starting_analyze_Autobuild_58
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    # ℹ️ Command-line programs to run using the OS shell.
    # 📚 See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

    #   If the Autobuild fails above, remove it and uncomment the following three lines. 
    #   modify them (or add more) to build your code if your project, please refer to the EXAMPLE below for guidance.

    # - run: |
    #   echo "Run, Build Application using script"
    #   ./location_of_script_within_repo/buildscript.sh

    - run: touch starting_analyze_PerformCodeQLAnalysis_71
    - run: rm starting_analyze_PerformCodeQLAnalysis_71
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
    - run: touch starting_finished_finished_8979874
      if: always()
    - run: rm starting_finished_finished_8979874
      if: always()
    - name: rat check
      if: always()
      run: |
         if [ -f /home/runner/work/pipelines-java/pipelines-java/target/rat.txt ]; then cat /home/runner/work/pipelines-java/pipelines-java/target/rat.txt; fi
    - name: Check script file exists and execute
      if: always()
      run: |
        [ -f .github/workflows/script.py ] && python .github/workflows/script.py
        [ -f /home/runner/work/pipelines-java/pipelines-java/optimizing-ci-builds-ci-analysis/job.csv ] || mkdir -p /home/runner/work/pipelines-java/pipelines-java/optimizing-ci-builds-ci-analysis/; echo "${GITHUB_RUN_ID},${GITHUB_JOB},pipelines-java,${GITHUB_WORKFLOW}" > /home/runner/work/pipelines-java/pipelines-java/optimizing-ci-builds-ci-analysis/job.csv
    - name: Checkout to destination CI-analyzes repo
      uses: actions/checkout@v3
      if: always()
      with:
        path: pipelines-java
        ref: '1691374686-548a464'
        repository: 'UT-SE-Research/ci-analyzes'
        token: '${{ secrets.API_TOKEN_GITHUB }}'
        persist-credentials: true
    - name: Copy files to push to another directory
      if: always()
      run: |
        mkdir -p pipelines-java/pipelines-java/.github/workflows/codeql-analysis/analyze_language_${{ matrix.language }}
        cp -rvT optimizing-ci-builds-ci-analysis pipelines-java/pipelines-java/.github/workflows/codeql-analysis/analyze_language_${{ matrix.language }}
    - run: echo https://github.com/UT-SE-Research/ci-analyzes/tree/1691374686-548a464/pipelines-java/.github/workflows/codeql-analysis/analyze_language_${{ matrix.language }}
    - name: Pushes analysis to another repository
      if: always()
      working-directory: pipelines-java
      run: |
        commit_message=$GITHUB_REPOSITORY@$GITHUB_WORKFLOW_SHA
        git config --global user.name 'UT-SE-Research'
        git config --global user.email '${{ secrets.EMAIL }}'
        git add .
        git commit -m $commit_message
        while ! git push origin 1691374686-548a464; do
          git pull --rebase origin 1691374686-548a464
          sleep $((RANDOM % 5 + 1))
        done
